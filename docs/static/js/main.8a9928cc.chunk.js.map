{"version":3,"sources":["components/Button.js","components/Footer.js","components/Header.js","components/Task.js","components/TasksList.js","redux/actions.js","redux/types.js","components/TodoList.js","components/App.js","redux/taskReducer.js","redux/rootReducer.js","redux/filterReducer.js","index.js"],"names":["Button","handleClick","props","onClick","cbData","this","className","children","Component","filtersList","Footer","filter","clearCompleted","allTasks","itemsLeft","onFilterChanged","map","filterItem","key","Header","createNewTask","e","newTask","id","Date","now","toString","title","currentTarget","value","done","onCreate","allDone","onKeyPress","placeholder","Task","state","isEdit","handleDelete","onDelete","handleUpdate","onUpdate","handleChange","event","setState","target","handleDblClick","window","addEventListener","handleKeyUp","handelCancel","removeEventListener","handleSave","onSaveEdit","type","onChange","onBlur","autoFocus","onDoubleClick","TasksList","tasks","createTask","task","payload","changeFilter","updateTask","deleteTask","saveEdit","ToDoList","filterTask","t","connect","length","dispatch","bindActionCreators","App","initialState","combineReducers","action","persistedState","localStorage","getItem","JSON","parse","store","createStore","rootReducer","devToolsEnhancer","subscribe","setItem","stringify","getState","app","ReactDOM","render","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.8a9928cc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Button extends Component {\r\n\r\n    handleClick = () => {\r\n        const { onClick, cbData } = this.props\r\n        onClick(cbData)\r\n    }\r\n\r\n    render() {\r\n        const { className, children } = this.props;\r\n\r\n        return (\r\n            <button \r\n                className={className}\r\n                onClick={this.handleClick}\r\n            >\r\n                {children}\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component }  from 'react';\r\n\r\nimport Button from './Button';\r\n\r\nimport './style/footer.css'\r\n\r\nconst filtersList = [\r\n    'all',\r\n    'active',\r\n    'completed',\r\n];\r\n\r\nclass Footer extends Component {\r\n    render () {\r\n        const { \r\n            filter,\r\n            clearCompleted,\r\n            allTasks,\r\n            itemsLeft,\r\n            onFilterChanged,\r\n        } = this.props;\r\n   \r\n        return (\r\n            <div className={allTasks > 0 ? 'show footer' : 'footer'} >\r\n                <span className='todoCount'>{itemsLeft} items left</span>\r\n\r\n                <div className='filterBtns'>\r\n                    {filtersList.map(filterItem => (\r\n                        <Button \r\n                            key={filterItem}\r\n                            className={filter === filterItem  ? 'filterSwitchBtn selected' : 'filterSwitchBtn'} \r\n                            cbData={filterItem} \r\n                            onClick={onFilterChanged}\r\n                        >\r\n                            {filterItem}\r\n                        </Button>\r\n                    ))}\r\n                </div>\r\n\r\n                <button \r\n                    onClick={clearCompleted}\r\n                    className='clearCompleted'\r\n                >\r\n                    clear completed\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React, { Component } from \"react\";\r\n\r\nimport './style/header.css'\r\n\r\nclass Header extends Component {\r\n    createNewTask = e => {\r\n        if (e.key === 'Enter') {\r\n            const newTask = {\r\n                    id: Date.now().toString(), \r\n                    title: e.currentTarget.value,\r\n                    done: false\r\n            };\r\n            this.props.onCreate(newTask);\r\n\r\n            e.currentTarget.value = '';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { allDone, allTasks } = this.props;\r\n        return (\r\n                <div className={'header'}>\r\n                    <div className='wrapper'>\r\n                        <button \r\n                            onClick={allDone}\r\n                            className={allTasks > 0 ? 'showAllDoneBtn allDoneBtn' : 'allDoneBtn'}\r\n                        >\r\n                            âˆŸ\r\n                        </button>\r\n                    </div>\r\n         \r\n                    <input \r\n                        onKeyPress={this.createNewTask} \r\n                        placeholder='What needs to be done?'\r\n\r\n                        className='newTask'\r\n                    />\r\n\r\n                </div>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport './style/task.css'\r\n\r\nclass Task extends Component {\r\n\r\n    state = {\r\n        value: '',\r\n        isEdit: false,\r\n    };\r\n\r\n    handleDelete = () => {\r\n        const { id, onDelete } = this.props;\r\n        onDelete(id);\r\n    }\r\n\r\n    handleUpdate = () => {\r\n        const { id, onUpdate } = this.props;\r\n        onUpdate(id);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({value: event.target.value});\r\n    }\r\n\r\n    handleDblClick = () => {\r\n        this.setState({ \r\n            isEdit: true,\r\n            value: this.props.title,\r\n        });\r\n        window.addEventListener('keydown', this.handleKeyUp);\r\n    }\r\n\r\n    handelCancel = () => {\r\n        this.setState({ isEdit: false });\r\n        window.removeEventListener('keydown', this.handleKeyUp);\r\n    }\r\n\r\n    handleSave = () => {\r\n        const { id, onSaveEdit } = this.props;\r\n        const { value } = this.state;\r\n\r\n        onSaveEdit(id, value);\r\n        this.handelCancel();\r\n    }\r\n\r\n    handleKeyUp = e => {\r\n        if (e.key === 'Escape') {\r\n            this.handelCancel();\r\n        }\r\n        if (e.key === 'Enter') {\r\n            this.handleSave();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isEdit } = this.state;\r\n        const { done, title } = this.props;\r\n\r\n        return (\r\n             <div className={done ? 'task done' : 'task'}>\r\n                <div \r\n                    className={done ? 'toggleDone' : 'toggleNotDone'}\r\n                    onClick={this.handleUpdate} \r\n                />\r\n\r\n                <div className=\"text\">\r\n                    {isEdit ? (                 \r\n                        <input \r\n                            type=\"text\" \r\n                            value={this.state.value} \r\n                            onChange={this.handleChange}\r\n                            onBlur={this.handleSave}\r\n                            autoFocus={true}\r\n                        />\r\n                        ) : (\r\n                        <p \r\n                            className=\"text\"\r\n                            onDoubleClick={this.handleDblClick}\r\n                        >\r\n                            {title}\r\n                        </p>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n                <div className='wrapperBtnDelete'>\r\n                    <button \r\n                        type=\"button\"\r\n                        onClick={this.handleDelete}\r\n                        className=\"delete\"\r\n                    >\r\n                        &times;\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Task;\r\n","import React, { Component } from \"react\";\r\nimport Task from \"./Task\"\r\n\r\nclass TasksList extends Component {\r\n\r\n    render() {\r\n        const { \r\n            onUpdate, \r\n            onDelete, \r\n            onSaveEdit, \r\n        } = this.props;\r\n        \r\n        return (\r\n            <div className=\"tasks\">\r\n                {\r\n                    this.props.tasks.map(({id, title, done}) => (\r\n                        <Task\r\n                            key={id}\r\n                            id={id}\r\n                            title={title}\r\n                            done={done} \r\n                            onUpdate={onUpdate}\r\n                            onDelete={onDelete} \r\n                            onSaveEdit={onSaveEdit}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TasksList;","import { CREATE_TASK, CHANGE_FILTER, UPDATE_TASK, DELETE_TASK, CLEAR_COMPLETED, SAVE_EDIT, ALL_DONE } from \"./types\";\r\n\r\nexport const createTask = task => ({\r\n    type: CREATE_TASK,\r\n    payload: task,\r\n});\r\n\r\nexport const changeFilter = filter => ({\r\n    type: CHANGE_FILTER,\r\n    payload: filter,\r\n});\r\n\r\nexport const updateTask = id => ({\r\n    type: UPDATE_TASK,\r\n    payload: id,\r\n});\r\n\r\nexport const deleteTask = id => ({\r\n    type: DELETE_TASK,\r\n    payload: id,\r\n});\r\n\r\nexport const clearCompleted = () => ({\r\n    type: CLEAR_COMPLETED,\r\n});\r\n\r\nexport const saveEdit = (id, title) => ({\r\n    type: SAVE_EDIT,\r\n    payload: {id, title},\r\n});\r\n\r\nexport const allDone = () => ({\r\n    type: ALL_DONE,\r\n})\r\n","export const CREATE_TASK = 'CREATE_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const UPDATE_TASK = 'UPDATE_TASK';\r\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\r\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED';\r\nexport const SAVE_EDIT = 'SAVE_EDIT';\r\nexport const ALL_DONE = 'ALL_DONE';\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport TasksList from \"./TasksList\";\r\n\r\nimport { \r\n    createTask,\r\n    changeFilter, \r\n    updateTask, \r\n    deleteTask, \r\n    clearCompleted,\r\n    saveEdit,\r\n    allDone,\r\n} from \"../redux/actions\";\r\n\r\nimport './style/todoList.css'\r\n\r\nclass ToDoList extends Component {\r\n\r\n    render() {\r\n        const { \r\n            tasks,\r\n            filter,\r\n            allTasks,\r\n            createNewTask,\r\n            allDone,\r\n            updateTask, \r\n            deleteTask,\r\n            itemsLeft,\r\n            changeFilter, \r\n            clearCompleted,\r\n            saveEdit,\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className=\"todoList\">\r\n                <Header \r\n                    onCreate={createNewTask} \r\n                    allDone={allDone}\r\n                    allTasks={allTasks}\r\n                />\r\n                <TasksList \r\n                    tasks={tasks} \r\n                    onUpdate={updateTask}\r\n                    onDelete={deleteTask}\r\n                    onSaveEdit={saveEdit}\r\n                />\r\n\r\n                <Footer \r\n                    filter={filter} \r\n                    allTasks={allTasks}\r\n                    itemsLeft={itemsLeft}\r\n                    onFilterChanged={changeFilter} \r\n                    clearCompleted={clearCompleted}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst filterTask = state => {\r\n    const { filter, tasks } = state;\r\n\r\n    switch(filter) {\r\n        case 'active':\r\n            return tasks.filter(t => !t.done);\r\n\r\n        case 'completed': \r\n            return tasks.filter(t => t.done);\r\n\r\n        default: return tasks\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    tasks: filterTask(state),\r\n    filter: state.filter,\r\n    itemsLeft: state.tasks.filter(t => !t.done).length,\r\n    allTasks: state.tasks.length,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({\r\n    createNewTask: createTask,\r\n    updateTask,\r\n    deleteTask,\r\n    changeFilter,\r\n    clearCompleted,\r\n    saveEdit,\r\n    allDone,\r\n  }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDoList);\r\n","import React, { Component } from 'react'\r\nimport ToDoList from './TodoList';\r\nimport './style/todoTitle.css'\r\n// import { ToDoList } from './TodoList.js'\r\n\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className='todoTitle'>todos</h1>\r\n                <ToDoList />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default App","import { \r\n    CREATE_TASK,\r\n    UPDATE_TASK,\r\n    DELETE_TASK, \r\n    CLEAR_COMPLETED,\r\n    SAVE_EDIT,\r\n    ALL_DONE,\r\n} from \"./types\"\r\n\r\nconst initialState = [];\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_TASK: \r\n            return [...state, action.payload];\r\n\r\n        case UPDATE_TASK:\r\n            return state.map(t => {\r\n                if (t.id === action.payload) {\r\n                    t.done = !t.done;\r\n                }\r\n                return t;\r\n            })\r\n\r\n        case DELETE_TASK:\r\n            return state.filter(t =>(t.id !== action.payload));\r\n\r\n        case CLEAR_COMPLETED:\r\n            return state.filter(t => !t.done);\r\n\r\n        case SAVE_EDIT:\r\n            return state.map(t => {\r\n                if (t.id === action.payload.id) {\r\n                    t.title = action.payload.title;\r\n                }\r\n                return t;\r\n            })\r\n\r\n        case ALL_DONE: \r\n            return state.map(t => {\r\n                if (t.done === false) {\r\n                    t.done = !t.done;\r\n                }\r\n                // t.done = !t.done;\r\n\r\n                return t;\r\n            })\r\n\r\n        default: return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport taskReducer from \"./taskReducer\";\r\nimport filterReducer from \"./filterReducer\";\r\n\r\nexport default combineReducers({\r\n    tasks: taskReducer,\r\n    filter: filterReducer,\r\n})","import { CHANGE_FILTER } from \"./types\"\r\n\r\nconst initialState = 'all';\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_FILTER: \r\n            return action.payload;\r\n\r\n        default: return state\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App.js';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './redux/rootReducer.js';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\n\r\nconst persistedState = localStorage.getItem('reduxState') \r\n                       ? JSON.parse(localStorage.getItem('reduxState'))\r\n                       : {}\r\n\r\nconst store = createStore(rootReducer, persistedState, devToolsEnhancer());\r\n\r\nstore.subscribe(()=>{\r\n    localStorage.setItem('reduxState', JSON.stringify(store.getState()))\r\n})\r\n\r\nconst app = (\r\n    <Provider store={ store }>\r\n        <App />\r\n    </Provider>\r\n)\r\n\r\nReactDOM.render(app , document.getElementById('root'));\r\nconsole.log(store);\r\n"],"sourceRoot":""}