{"version":3,"sources":["components/Button.js","components/Footer.js","components/Header.js","components/Task.js","components/TasksList.js","redux/actions.js","redux/types.js","components/TodoList.js","components/App.js","redux/taskReducer.js","redux/rootReducer.js","redux/filterReducer.js","index.js"],"names":["Button","handleClick","props","onClick","cbData","this","className","children","Component","filtersList","Footer","filter","clearCompleted","allTasks","itemsLeft","onFilterChanged","map","filterItem","key","Header","state","isDone","createNewTask","e","trimTitle","currentTarget","value","trim","newTask","id","Date","now","toString","title","done","onCreate","handleClickDone","allDone","isDoneEdit","handleClickUndone","allUndone","itemsDone","setState","onKeyPress","placeholder","Task","isEdit","handleDelete","onDelete","handleUpdate","onUpdate","handleChange","event","handleDblClick","window","addEventListener","handleKeyUp","handelCancel","removeEventListener","handleSave","onSaveEdit","type","onChange","onBlur","autoFocus","onDoubleClick","TasksList","tasks","createTask","task","payload","changeFilter","updateTask","deleteTask","saveEdit","ToDoList","filterTask","t","connect","length","dispatch","bindActionCreators","App","initialState","combineReducers","action","persistedState","localStorage","getItem","JSON","parse","store","createStore","rootReducer","devToolsEnhancer","subscribe","setItem","stringify","getState","app","ReactDOM","render","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.9b7c01b9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Button extends Component {\r\n\r\n    handleClick = () => {\r\n        const { onClick, cbData } = this.props;\r\n        onClick(cbData);\r\n    }\r\n\r\n    render() {\r\n        const { className, children } = this.props;\r\n\r\n        return (\r\n            <button \r\n                className={className}\r\n                onClick={this.handleClick}\r\n            >\r\n                {children}\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component }  from 'react';\r\n\r\nimport Button from './Button';\r\n\r\nimport './style/footer.css'\r\n\r\nconst filtersList = [\r\n    'all',\r\n    'active',\r\n    'completed',\r\n];\r\n\r\nclass Footer extends Component {\r\n    render () {\r\n        const { \r\n            filter,\r\n            clearCompleted,\r\n            allTasks,\r\n            itemsLeft,\r\n            onFilterChanged,\r\n        } = this.props;\r\n   \r\n        return (\r\n            <div className={allTasks > 0 ? 'show footer' : 'footer'} >\r\n                <span className='todoCount'>{itemsLeft} items left</span>\r\n\r\n                <div className='filterBtns'>\r\n                    {filtersList.map(filterItem => (\r\n                        <Button \r\n                            key={filterItem}\r\n                            className={filter === filterItem  ? 'filterSwitchBtn selected' : 'filterSwitchBtn'} \r\n                            cbData={filterItem} \r\n                            onClick={onFilterChanged}\r\n                        >\r\n                            {filterItem}\r\n                        </Button>\r\n                    ))}\r\n                </div>\r\n\r\n                <button \r\n                    onClick={clearCompleted}\r\n                    className='clearCompleted'\r\n                >\r\n                    clear completed\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\n\r\nimport './style/header.css';\r\n\r\nclass Header extends Component {\r\n\r\n    state = {\r\n        isDone: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.isDoneEdit();\r\n    }\r\n\r\n    createNewTask = e => {\r\n        const trimTitle = e.currentTarget.value;\r\n\r\n        if (e.key === 'Enter' && trimTitle.trim()) {\r\n            const newTask = {\r\n                    id: Date.now().toString(), \r\n                    title: trimTitle,\r\n                    done: false\r\n            };\r\n            this.props.onCreate(newTask);\r\n\r\n            e.currentTarget.value = '';\r\n        }\r\n    }\r\n\r\n    handleClickDone = () => {\r\n        this.props.allDone();\r\n        this.isDoneEdit();\r\n        }\r\n\r\n    handleClickUndone = () => {\r\n        this.props.allUndone();\r\n        this.isDoneEdit();\r\n    }\r\n\r\n    isDoneEdit = () => {\r\n        const { allTasks, itemsDone } = this.props;\r\n\r\n        if (allTasks === itemsDone) {\r\n            this.setState({ \r\n                isDone: false,\r\n            });\r\n        } else { \r\n            this.setState({ \r\n                isDone: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isDone } = this.state;\r\n        const { allTasks, isDoneEdit } = this.props;\r\n\r\n        return (\r\n            <div className={'header'}>\r\n                <div className='wrapper'>\r\n                    {isDone ? (\r\n                    <button \r\n                        isDoneEdit={isDoneEdit}\r\n                        onClick={this.handleClickUndone}\r\n                        className={allTasks > 0 ? 'showAllDoneBtn allDoneBtn d' : 'allDoneBtn d'}\r\n                    >\r\n                        ∟   \r\n                    </button>\r\n                    ) : (\r\n                    <button \r\n                        isDoneEdit={isDoneEdit}\r\n                        onClick={this.handleClickDone}\r\n                        className={allTasks > 0 ? 'showAllDoneBtn allDoneBtn v' : 'allDoneBtn v'}\r\n                    >\r\n                        ∟   \r\n                    </button>\r\n                    )}\r\n                </div>\r\n        \r\n                <input \r\n                    onKeyPress={this.createNewTask} \r\n                    placeholder='What needs to be done?'\r\n                    className='newTask'\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nimport './style/task.css';\r\n\r\nclass Task extends Component {\r\n\r\n    state = {\r\n        value: '',\r\n        isEdit: false,\r\n    };\r\n\r\n    handleDelete = () => {\r\n        const { id, onDelete } = this.props;\r\n\r\n        onDelete(id);\r\n    }\r\n\r\n    handleUpdate = () => {\r\n        const { id, onUpdate } = this.props;\r\n\r\n        onUpdate(id);\r\n    }\r\n\r\n    handleChange = event => {\r\n        const trimTitle = event.currentTarget.value;\r\n\r\n        if (trimTitle.trim()) {\r\n            this.setState({value: trimTitle});\r\n        }\r\n    }\r\n\r\n    handleDblClick = () => {\r\n        this.setState({ \r\n            isEdit: true,\r\n            value: this.props.title,\r\n        });\r\n        window.addEventListener('keydown', this.handleKeyUp);\r\n    }\r\n\r\n    handelCancel = () => {\r\n        this.setState({ isEdit: false });\r\n        window.removeEventListener('keydown', this.handleKeyUp);\r\n    }\r\n\r\n    handleSave = () => {\r\n        const { id, onSaveEdit } = this.props;\r\n        const { value } = this.state;\r\n\r\n        onSaveEdit(id, value);\r\n        this.handelCancel();\r\n    }\r\n\r\n    handleKeyUp = e => {\r\n        if (e.key === 'Escape') {\r\n            this.handelCancel();\r\n        }\r\n        if (e.key === 'Enter') {\r\n            this.handleSave();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isEdit } = this.state;\r\n        const { done, title } = this.props;\r\n\r\n        return (\r\n             <div className={done ? 'task done' : 'task'}>\r\n                <div \r\n                    className={done ? 'toggleDone' : 'toggleNotDone'}\r\n                    onClick={this.handleUpdate} \r\n                />\r\n\r\n                <div className='text'>\r\n                    {isEdit ? (                 \r\n                        <input \r\n                            type='text'\r\n                            value={this.state.value} \r\n                            onChange={this.handleChange}\r\n                            onBlur={this.handleSave}\r\n                            autoFocus={true}\r\n                            className='editTask'\r\n                        />\r\n                        ) : (\r\n                        <p \r\n                            className={done ? 'text done' : 'text'}\r\n                            onDoubleClick={this.handleDblClick}\r\n                        >\r\n                            {title}\r\n                        </p>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n                <div className='wrapperBtnDelete'>\r\n                    <button \r\n                        type=\"button\"\r\n                        onClick={this.handleDelete}\r\n                        className=\"delete\"\r\n                    >\r\n                        &times;\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Task;\r\n","import React, { Component } from 'react';\r\nimport Task from './Task';\r\n\r\nclass TasksList extends Component {\r\n    render() {\r\n        const { \r\n            onUpdate, \r\n            onDelete, \r\n            onSaveEdit, \r\n        } = this.props;\r\n        \r\n        return (\r\n            <div className='tasks'>\r\n                {\r\n                    this.props.tasks.map(({id, title, done}) => (\r\n                        <Task\r\n                            key={id}\r\n                            id={id}\r\n                            title={title}\r\n                            done={done} \r\n                            onUpdate={onUpdate}\r\n                            onDelete={onDelete} \r\n                            onSaveEdit={onSaveEdit}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TasksList;","import { \r\n    CREATE_TASK, \r\n    CHANGE_FILTER, \r\n    UPDATE_TASK, \r\n    DELETE_TASK, \r\n    CLEAR_COMPLETED, \r\n    SAVE_EDIT, \r\n    ALL_DONE, \r\n    ALL_UNDONE \r\n} from \"./types\";\r\n\r\nexport const createTask = task => ({\r\n    type: CREATE_TASK,\r\n    payload: task,\r\n});\r\n\r\nexport const changeFilter = filter => ({\r\n    type: CHANGE_FILTER,\r\n    payload: filter,\r\n});\r\n\r\nexport const updateTask = id => ({\r\n    type: UPDATE_TASK,\r\n    payload: id,\r\n});\r\n\r\nexport const deleteTask = id => ({\r\n    type: DELETE_TASK,\r\n    payload: id,\r\n});\r\n\r\nexport const clearCompleted = () => ({\r\n    type: CLEAR_COMPLETED,\r\n});\r\n\r\nexport const saveEdit = (id, title) => ({\r\n    type: SAVE_EDIT,\r\n    payload: {id, title},\r\n});\r\n\r\nexport const allDone = () => ({\r\n    type: ALL_DONE,\r\n});\r\n\r\nexport const allUndone = () => ({\r\n    type: ALL_UNDONE,\r\n})\r\n","export const CREATE_TASK = 'CREATE_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const UPDATE_TASK = 'UPDATE_TASK';\r\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\r\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED';\r\nexport const SAVE_EDIT = 'SAVE_EDIT';\r\nexport const ALL_DONE = 'ALL_DONE';\r\nexport const ALL_UNDONE = 'ALL_UNDONE';\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\nimport TasksList from './TasksList';\r\n\r\nimport { \r\n    createTask,\r\n    changeFilter, \r\n    updateTask, \r\n    deleteTask, \r\n    clearCompleted,\r\n    saveEdit,\r\n    allDone,\r\n    allUndone,\r\n} from '../redux/actions';\r\n\r\nimport './style/todoList.css';\r\n\r\nclass ToDoList extends Component {\r\n\r\n    render() {\r\n        const { \r\n            tasks,\r\n            filter,\r\n            allTasks,\r\n            createNewTask,\r\n            allDone,\r\n            allUndone,\r\n            updateTask, \r\n            deleteTask,\r\n            itemsLeft,\r\n            itemsDone,\r\n            changeFilter, \r\n            clearCompleted,\r\n            saveEdit,\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className='todoList'>\r\n                <Header \r\n                    onCreate={createNewTask} \r\n                    allDone={allDone}\r\n                    allUndone={allUndone}\r\n                    allTasks={allTasks}\r\n                    itemsLeft={itemsLeft}\r\n                    itemsDone={itemsDone}\r\n                />\r\n                <TasksList \r\n                    tasks={tasks} \r\n                    onUpdate={updateTask}\r\n                    onDelete={deleteTask}\r\n                    onSaveEdit={saveEdit}\r\n                />\r\n\r\n                <Footer \r\n                    filter={filter} \r\n                    allTasks={allTasks}\r\n                    itemsLeft={itemsLeft}\r\n                    onFilterChanged={changeFilter} \r\n                    clearCompleted={clearCompleted}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst filterTask = state => {\r\n    const { filter, tasks } = state;\r\n\r\n    switch(filter) {\r\n        case 'active':\r\n            return tasks.filter(t => !t.done);\r\n\r\n        case 'completed': \r\n            return tasks.filter(t => t.done);\r\n\r\n        default: return tasks\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    tasks: filterTask(state),\r\n    filter: state.filter,\r\n    itemsLeft: state.tasks.filter(t => !t.done).length,\r\n    itemsDone: state.tasks.filter(t => t.done).length,\r\n    allTasks: state.tasks.length,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({\r\n    createNewTask: createTask,\r\n    updateTask,\r\n    deleteTask,\r\n    changeFilter,\r\n    clearCompleted,\r\n    saveEdit,\r\n    allDone,\r\n    allUndone,\r\n  }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDoList);\r\n","import React, { Component } from 'react';\r\nimport ToDoList from './TodoList';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className='todoTitle'>todos</h1>\r\n                <ToDoList />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import { \r\n    CREATE_TASK,\r\n    UPDATE_TASK,\r\n    DELETE_TASK, \r\n    CLEAR_COMPLETED,\r\n    SAVE_EDIT,\r\n    ALL_DONE,\r\n    ALL_UNDONE,\r\n} from \"./types\"\r\n// import { allDone } from \"./actions\";\r\n\r\nconst initialState = [];\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_TASK: \r\n            return [...state, action.payload];\r\n\r\n        case UPDATE_TASK:\r\n            return state.map(t => {\r\n                if (t.id === action.payload) {\r\n                    t.done = !t.done;\r\n                }\r\n                return t;\r\n            })\r\n\r\n        case DELETE_TASK:\r\n            return state.filter(t =>(t.id !== action.payload));\r\n\r\n        case CLEAR_COMPLETED:\r\n            return state.filter(t => !t.done);\r\n\r\n        case SAVE_EDIT:\r\n            return state.map(t => {\r\n                if (t.id === action.payload.id) {\r\n                    t.title = action.payload.title;\r\n                }\r\n                return t;\r\n            })\r\n\r\n        case ALL_DONE: \r\n            return state.map(t => {\r\n                if (t.done === false) {\r\n                    t.done = !t.done;\r\n                }\r\n\r\n                return t;\r\n            })\r\n\r\n        case ALL_UNDONE:\r\n            return state.map(t => {\r\n                if (t.done === true) {\r\n                    t.done = !t.done;\r\n                }\r\n\r\n                return t;\r\n            })\r\n\r\n        default: return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport taskReducer from \"./taskReducer\";\r\nimport filterReducer from \"./filterReducer\";\r\n\r\nexport default combineReducers({\r\n    tasks: taskReducer,\r\n    filter: filterReducer,\r\n})","import { CHANGE_FILTER } from \"./types\"\r\n\r\nconst initialState = 'all';\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_FILTER: \r\n            return action.payload;\r\n\r\n        default: return state\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\n\r\nimport App from './components/App.js';\r\nimport rootReducer from './redux/rootReducer.js';\r\n\r\nimport './components/style/todoTitle.css';\r\n\r\n\r\nconst persistedState = localStorage.getItem('reduxState') \r\n                       ? JSON.parse(localStorage.getItem('reduxState'))\r\n                       : {}\r\n\r\nconst store = createStore(rootReducer, persistedState, devToolsEnhancer());\r\n\r\nstore.subscribe(()=>{\r\n    localStorage.setItem('reduxState', JSON.stringify(store.getState()))\r\n})\r\n\r\nconst app = (\r\n    <Provider store={ store }>\r\n        <App />\r\n    </Provider>\r\n)\r\n\r\nReactDOM.render(app , document.getElementById('root'));\r\nconsole.log(store);\r\n"],"sourceRoot":""}